name: Android [Dev] 최신 버전 배포 # 앱 배포 제목

on:
  push:
    branches: [ release ] # release으로 PR을 날릴때만 트리거 되도록 정의

jobs: # 아래에 workflow 기능 정의한다.
  build: # 빌드 순서를 정한다.
    runs-on: ubuntu-latest # ubuntu 배포버전에서 실행되도록 설정
    steps: # 단계별로 수행해야하는 작업을 정의한다. n번째 단계가 실패하면, n+1 단계는 취소됨.
      - uses: actions/checkout@v2

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

        # debug 버전 빌드 시작
      - name: build debug
        run: bash ./gradlew assembleDebug --stacktrace

      - name: Firebase Deploy # Firebase 배포 시작
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}} # Github Settign - Secret에 Firebase 정보를 저장해놓음.
          token: ${{secrets.FIREBASE_TOKEN}} # cli를 통해 Firebase Project의 Token을 저장해놓음.
          groups: PillMate # 테스트 대상 그룹
          file: app/build/outputs/apk/debug/app-debug.apk

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          repo-token: ${{ secrets.GIT_TOKEN }}
          channel-id: 'info_qa'
          slack-message: '새로운 테스트 빌드 배포
                          ${{ github.event.head_commit.message }}'
          file_path: 'app/build/outputs/apk/debug/app-debug.apk'
          file_name: 'app-debug.apk'
          file_type: 'apk'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}